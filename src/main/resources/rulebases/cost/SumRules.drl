
package rulebases.cost

import rulebases.cost.OrderLine;
import rulebases.cost.LeftToDistribute;
import rulebases.cost.Product;
import rulebases.cost.Pallet;
import rulebases.cost.CostCalculationRequest;
import rulebases.cost.CalculatedElement;
import rulebases.cost.HandlingCostElement;
import rulebases.cost.TaxesCostElement;
import rulebases.cost.TransportCostElement;
import rulebases.cost.Step;
import rulebases.cost.City;

import java.lang.Math;

rule "CalculateTotal"
ruleflow-group "total"
	when
	$c : CostCalculationRequest(  )
	$totalBoatTransport : Number( doubleValue > 0 )
             from accumulate( $s : Step(transportType ==Step.Ship_TransportType) &&
                              TransportCostElement(step ==$s, $value : amount  ),
                              init( double total = 0; ),
                              action( total += $value; ),
                              reverse( total -= $value; ),
                              result( total ) )
	$totalTrainTransport : Number( doubleValue > 0 )
            from accumulate( $s : Step(transportType ==Step.train_TransportType) &&
                            TransportCostElement(step ==$s, $value : amount  ),
                             init( double total = 0; ),
                             action( total += $value; ),
                             reverse( total -= $value; ),
                             result( total ) )
	$totalTruckTransport : Number( doubleValue > 0 )
           from accumulate( $s : Step(transportType ==Step.truck_TransportType) &&
                            TransportCostElement(step ==$s, $value : amount  ),
                            init( double total = 0; ),
                            action( total += $value; ),
                            reverse( total -= $value; ),
                            result( total ) )
	
	
	
	$totalTransport : Number( doubleValue > 0 )
             from accumulate(  TransportCostElement( $value : amount  ),
                              init( double total = 0; ),
                              action( total += $value; ),
                              reverse( total -= $value; ),
                              result( total ) )
    $totalTaxes : Number( doubleValue > 0 )
             from accumulate(  TaxesCostElement( $value : amount  ),
                              init( double total = 0; ),
                              action( total += $value; ),
                              reverse( total -= $value; ),
                              result( total ) )
     $totalHandling : Number( doubleValue > 0 )
             from accumulate(  HandlingCostElement( $value : amount  ),
                              init( double total = 0; ),
                              action( total += $value; ),
                              reverse( total -= $value; ),
                              result( total ) )
	then
//		System.out.println("NumberOfPallets="+$c.getPallets().size());
//		System.out.println("TotalShipTransport="+$totalBoatTransport);
//		System.out.println("TotalTrainTransport="+$totalTrainTransport);
//		System.out.println("TotalTruckTransport="+$totalTruckTransport);
//		System.out.println("TotalTransport="+$totalTransport);
//		System.out.println("TotalTaxes="+$totalTaxes);
//		System.out.println("TotalHandling="+$totalHandling);
        $c.setTotalTransportCost((double)$totalTransport);
        $c.setTotalTaxCost((double)$totalTaxes);
        $c.setTotalHandlingCost((double)$totalHandling);
end;